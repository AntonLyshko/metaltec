{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { parseCookies, destroyCookie } from \"nookies\";\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\nvar CheckoutForm = function CheckoutForm(props, ctx) {\n  var _useState = useState(),\n      checkoutError = _useState[0],\n      setCheckoutError = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutSuccess = _useState2[0],\n      setCheckoutSuccess = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var cardElement, _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              cardElement = elements.getElement(CardElement);\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: cardElement\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              setCheckoutError(error.message);\n              _context.next = 18;\n              break;\n\n            case 13:\n              setCheckoutSuccess(true);\n              destroyCookie(null, \"paymentIntentId\");\n              destroyCookie(null, \"sum\");\n              _context.next = 18;\n              return createOrder();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createOrder = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var rawOrder, order;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return localStorage.getItem('order');\n\n            case 2:\n              rawOrder = _context2.sent;\n              _context2.next = 5;\n              return JSON.parse(rawOrder);\n\n            case 5:\n              order = _context2.sent;\n              console.log(order);\n              _context2.next = 9;\n              return axios.post('http://localhost:1337/orders', order).then(function (response) {\n                console.log('Order: ', response.data);\n                sendCheck(response.data.id);\n                localStorage.removeItem(\"products\");\n              })[\"catch\"](function (error) {\n                console.log('An error occurred:', error.response);\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createOrder() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sendCheck = function sendCheck(id) {\n    console.log('Sending order info: ' + id);\n    axios.get('http://localhost:5000/api/invoice/' + id);\n  };\n\n  var CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        border: '1px solid #ddd',\n        iconColor: '#ff1721',\n        color: '#111',\n        fontSize: '18px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n          color: '#ff1721'\n        },\n        '::placeholder': {\n          color: '#111'\n        }\n      },\n      invalid: {\n        iconColor: '#ffc7ee',\n        color: '#ffc7ee'\n      }\n    }\n  };\n  if (checkoutSuccess) return __jsx(\"div\", {\n    className: \"payment-success\"\n  }, __jsx(\"img\", {\n    width: \"72\",\n    height: \"72\",\n    src: require(\"../images/check.svg\")\n  }), __jsx(\"h3\", null, \"Platba byla \\xFAsp\\u011B\\u0161n\\xE1\"), __jsx(\"p\", null, \"Kontrola a podrobnosti o n\\xE1kupu byly zasl\\xE1ny na po\\u0161tu, kterou jste zadali\"));\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"h4\", {\n    className: \"final-sum\"\n  }, \"Platit \", props.sum, \" K\\u010D\"), __jsx(\"div\", {\n    className: \"card-element-container\"\n  }, __jsx(CardElement, {\n    options: CARD_OPTIONS\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"final-btn-container af-class-button-2 af-class-order-btn-1 w-button continue-btn final-btn\",\n    disabled: !stripe\n  }, \"Pay\"), __jsx(\"div\", {\n    className: \"error-container\",\n    style: {\n      color: \"red\"\n    }\n  }, checkoutError));\n};\n\nexport default CheckoutForm;","map":null,"metadata":{},"sourceType":"module"}
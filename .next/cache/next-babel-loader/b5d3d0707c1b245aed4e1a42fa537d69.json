{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\Next\\\\metaltec\\\\components\\\\checkout-form.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { destroyCookie } from \"nookies\";\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var paymentIntent = _ref.paymentIntent;\n\n  var _useState = useState(),\n      checkoutError = _useState[0],\n      setCheckoutError = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutSuccess = _useState2[0],\n      setCheckoutSuccess = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n  var client_secret = \"pk_test_51HfCQbKalev6rGvBMHNaOtgfWfMUKJzkhs7TfmcQ5fjp5XyoeG2z97erNGBrtWPLnv3QmN1ImHhkNzX0fgX9lLKQ00ogCnUjLE\";\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$confirm, _paymentIntent, confirmError, _yield$stripe$confirm2, _error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return stripe.confirmCardPayment(client_secret, {\n                payment_method: {\n                  card: elements.getElement(CardElement)\n                }\n              }, {\n                handleActions: false\n              });\n\n            case 4:\n              _yield$stripe$confirm = _context.sent;\n              _paymentIntent = _yield$stripe$confirm.paymentIntent;\n              confirmError = _yield$stripe$confirm.error;\n\n              if (!confirmError) {\n                _context.next = 9;\n                break;\n              }\n\n              throw new Error(error.message);\n\n            case 9:\n              if (!(_paymentIntent.status === \"requires_action\")) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 12;\n              return stripe.confirmCardPayment(client_secret);\n\n            case 12:\n              _yield$stripe$confirm2 = _context.sent;\n              _error = _yield$stripe$confirm2.error;\n\n              if (_error) {\n                // The payment failed -- ask your customer for a new payment method.\n                console.log(_error);\n              } else {\n                // The payment has succeeded.\n                alert('success');\n              }\n\n              _context.next = 18;\n              break;\n\n            case 17:\n              // The payment has succeeded.\n              alert('success');\n\n            case 18:\n              console.log(paymentResult); // if (status === \"succeeded\") {\n              //     setCheckoutSuccess(true);\n              //     destroyCookie(null, \"paymentIntentId\");\n              // }\n\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setCheckoutError(_context.t0.message);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 21]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (checkoutSuccess) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"Payment successful!\");\n  return __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(CardElement, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Pay now\"), checkoutError && __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }\n  }, checkoutError));\n};\n\n_s(CheckoutForm, \"0Jwy+2ieaWtOkzag7YRq0FxYSDs=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/anton/Desktop/Next/metaltec/components/checkout-form.js"],"names":["React","useState","destroyCookie","CardElement","useStripe","useElements","CheckoutForm","paymentIntent","checkoutError","setCheckoutError","checkoutSuccess","setCheckoutSuccess","stripe","elements","client_secret","handleSubmit","e","preventDefault","confirmCardPayment","payment_method","card","getElement","handleActions","confirmError","error","Error","message","status","console","log","alert","paymentResult","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { destroyCookie } from \"nookies\";\r\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js'\r\n\r\nconst CheckoutForm = ({ paymentIntent }) => {\r\n    const [checkoutError, setCheckoutError] = useState();\r\n    const [checkoutSuccess, setCheckoutSuccess] = useState();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const client_secret = \"pk_test_51HfCQbKalev6rGvBMHNaOtgfWfMUKJzkhs7TfmcQ5fjp5XyoeG2z97erNGBrtWPLnv3QmN1ImHhkNzX0fgX9lLKQ00ogCnUjLE\";\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const {paymentIntent, error: confirmError} = await stripe.confirmCardPayment(\r\n                client_secret,\r\n                {\r\n                    payment_method: {\r\n                        card: elements.getElement(CardElement)\r\n                    }\r\n                },\r\n                {handleActions: false}\r\n              );\r\n\r\n\r\n            if (confirmError) throw new Error(error.message);\r\n\r\n            if (paymentIntent.status === \"requires_action\") {\r\n                // Let Stripe.js handle the rest of the payment flow.\r\n                const {error} = await stripe.confirmCardPayment(client_secret);\r\n                if (error) {\r\n                  // The payment failed -- ask your customer for a new payment method.\r\n                  console.log(error);\r\n                } else {\r\n                  // The payment has succeeded.\r\n                  alert('success')\r\n                }\r\n              } else {\r\n                // The payment has succeeded.\r\n                alert('success')\r\n              }\r\n\r\n            console.log(paymentResult)\r\n            // if (status === \"succeeded\") {\r\n            //     setCheckoutSuccess(true);\r\n            //     destroyCookie(null, \"paymentIntentId\");\r\n            // }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setCheckoutError(err.message);\r\n        }\r\n    }\r\n\r\n    if (checkoutSuccess) return <p>Payment successful!</p>;\r\n\r\n    return (\r\n        <form onSubmit={(e)=>handleSubmit(e)}>\r\n            <CardElement />\r\n\r\n            <button type=\"submit\" disabled={!stripe}>\r\n                Pay now\r\n            </button>\r\n            {checkoutError && <span style={{ color: \"red\" }}>{checkoutError}</span>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}
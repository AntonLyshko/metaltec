{"ast":null,"code":"import Markdown from 'markdown-it';\nimport 'highlight.js/styles/solarized-dark.css';\nimport hljs from 'highlight.js';\nimport abbr from 'markdown-it-abbr';\nimport container from 'markdown-it-container';\nimport deflist from 'markdown-it-deflist';\nimport emoji from 'markdown-it-emoji';\nimport footnote from 'markdown-it-footnote';\nimport ins from 'markdown-it-ins';\nimport mark from 'markdown-it-mark';\nimport sub from 'markdown-it-sub';\nimport sup from 'markdown-it-sup';\nvar md = new Markdown({\n  html: true,\n  // Enable HTML tags in source\n  xhtmlOut: false,\n  breaks: false,\n  langPrefix: 'language-',\n  linkify: true,\n  typographer: true,\n  // Code from: https://github.com/markdown-it/markdown-it/blob/master/support/demo_template/index.js#L83\n  highlight: function highlight(str, lang) {\n    if (lang && lang !== 'auto' && hljs.getLanguage(lang)) {\n      return '<pre class=\"hljs language-' + md.utils.escapeHtml(lang.toLowerCase()) + '\"><code>' + hljs.highlight(lang, str, true).value + '</code></pre>';\n    }\n\n    if (lang === 'auto') {\n      var result = hljs.highlightAuto(str);\n      return '<pre class=\"hljs language-' + md.utils.escapeHtml(result.language) + '\"><code>' + result.value + '</code></pre>';\n    }\n\n    return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n  }\n}).use(abbr).use(container, 'warning').use(container, 'tip').use(deflist).use(emoji).use(footnote).use(ins).use(mark).use(sub).use(sup); // Code from: https://github.com/markdown-it/markdown-it-footnote/blob/master/index.js#L29\n\nmd.renderer.rules.footnote_ref = function (tokens, idx, options, env, slf) {\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  return '<sup class=\"footnote-ref\"><span>' + caption + '</span></sup>';\n};\n\nmd.renderer.rules.footnote_anchor = function () {\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return \" <span class=\\\"footnote-backref\\\">\\u21A9\\uFE0E</span>\";\n};\n\nexport default md;","map":{"version":3,"sources":["C:/Users/anton/Desktop/Next/metaltec/pages/product/components/textRender.js"],"names":["Markdown","hljs","abbr","container","deflist","emoji","footnote","ins","mark","sub","sup","md","html","xhtmlOut","breaks","langPrefix","linkify","typographer","highlight","str","lang","getLanguage","utils","escapeHtml","toLowerCase","value","result","highlightAuto","language","use","renderer","rules","footnote_ref","tokens","idx","options","env","slf","caption","footnote_caption","footnote_anchor"],"mappings":"AACA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAO,wCAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,IAAMC,EAAE,GAAG,IAAIX,QAAJ,CAAa;AACtBY,EAAAA,IAAI,EAAE,IADgB;AACV;AACZC,EAAAA,QAAQ,EAAE,KAFY;AAGtBC,EAAAA,MAAM,EAAE,KAHc;AAItBC,EAAAA,UAAU,EAAE,WAJU;AAKtBC,EAAAA,OAAO,EAAE,IALa;AAMtBC,EAAAA,WAAW,EAAE,IANS;AAOtB;AACAC,EAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,IAAN,EAAe;AACxB,QAAIA,IAAI,IAAIA,IAAI,KAAK,MAAjB,IAA2BnB,IAAI,CAACoB,WAAL,CAAiBD,IAAjB,CAA/B,EAAuD;AACrD,aACE,+BACAT,EAAE,CAACW,KAAH,CAASC,UAAT,CAAoBH,IAAI,CAACI,WAAL,EAApB,CADA,GAEA,UAFA,GAGAvB,IAAI,CAACiB,SAAL,CAAeE,IAAf,EAAqBD,GAArB,EAA0B,IAA1B,EAAgCM,KAHhC,GAIA,eALF;AAOD;;AAED,QAAIL,IAAI,KAAK,MAAb,EAAqB;AACnB,UAAMM,MAAM,GAAGzB,IAAI,CAAC0B,aAAL,CAAmBR,GAAnB,CAAf;AAEA,aACE,+BACAR,EAAE,CAACW,KAAH,CAASC,UAAT,CAAoBG,MAAM,CAACE,QAA3B,CADA,GAEA,UAFA,GAGAF,MAAM,CAACD,KAHP,GAIA,eALF;AAOD;;AAED,WAAO,6BAA6Bd,EAAE,CAACW,KAAH,CAASC,UAAT,CAAoBJ,GAApB,CAA7B,GAAwD,eAA/D;AACD;AAhCqB,CAAb,EAkCRU,GAlCQ,CAkCJ3B,IAlCI,EAmCR2B,GAnCQ,CAmCJ1B,SAnCI,EAmCO,SAnCP,EAoCR0B,GApCQ,CAoCJ1B,SApCI,EAoCO,KApCP,EAqCR0B,GArCQ,CAqCJzB,OArCI,EAsCRyB,GAtCQ,CAsCJxB,KAtCI,EAuCRwB,GAvCQ,CAuCJvB,QAvCI,EAwCRuB,GAxCQ,CAwCJtB,GAxCI,EAyCRsB,GAzCQ,CAyCJrB,IAzCI,EA0CRqB,GA1CQ,CA0CJpB,GA1CI,EA2CRoB,GA3CQ,CA2CJnB,GA3CI,CAAX,C,CA6CA;;AACAC,EAAE,CAACmB,QAAH,CAAYC,KAAZ,CAAkBC,YAAlB,GAAiC,UAACC,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAoC;AACnE,MAAMC,OAAO,GAAGD,GAAG,CAACN,KAAJ,CAAUQ,gBAAV,CAA2BN,MAA3B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiDC,GAAjD,EAAsDC,GAAtD,CAAhB;AAEA,SAAO,qCAAqCC,OAArC,GAA+C,eAAtD;AACD,CAJD;;AAMA3B,EAAE,CAACmB,QAAH,CAAYC,KAAZ,CAAkBS,eAAlB,GAAoC,YAAM;AACxC;AACA,SAAO,uDAAP;AACD,CAHD;;AAKA,eAAe7B,EAAf","sourcesContent":["\r\nimport Markdown from 'markdown-it';\r\nimport 'highlight.js/styles/solarized-dark.css';\r\nimport hljs from 'highlight.js';\r\nimport abbr from 'markdown-it-abbr';\r\nimport container from 'markdown-it-container';\r\nimport deflist from 'markdown-it-deflist';\r\nimport emoji from 'markdown-it-emoji';\r\nimport footnote from 'markdown-it-footnote';\r\nimport ins from 'markdown-it-ins';\r\nimport mark from 'markdown-it-mark';\r\nimport sub from 'markdown-it-sub';\r\nimport sup from 'markdown-it-sup';\r\n\r\nconst md = new Markdown({\r\n  html: true, // Enable HTML tags in source\r\n  xhtmlOut: false,\r\n  breaks: false,\r\n  langPrefix: 'language-',\r\n  linkify: true,\r\n  typographer: true,\r\n  // Code from: https://github.com/markdown-it/markdown-it/blob/master/support/demo_template/index.js#L83\r\n  highlight: (str, lang) => {\r\n    if (lang && lang !== 'auto' && hljs.getLanguage(lang)) {\r\n      return (\r\n        '<pre class=\"hljs language-' +\r\n        md.utils.escapeHtml(lang.toLowerCase()) +\r\n        '\"><code>' +\r\n        hljs.highlight(lang, str, true).value +\r\n        '</code></pre>'\r\n      );\r\n    }\r\n\r\n    if (lang === 'auto') {\r\n      const result = hljs.highlightAuto(str);\r\n\r\n      return (\r\n        '<pre class=\"hljs language-' +\r\n        md.utils.escapeHtml(result.language) +\r\n        '\"><code>' +\r\n        result.value +\r\n        '</code></pre>'\r\n      );\r\n    }\r\n\r\n    return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\r\n  },\r\n})\r\n  .use(abbr)\r\n  .use(container, 'warning')\r\n  .use(container, 'tip')\r\n  .use(deflist)\r\n  .use(emoji)\r\n  .use(footnote)\r\n  .use(ins)\r\n  .use(mark)\r\n  .use(sub)\r\n  .use(sup);\r\n\r\n// Code from: https://github.com/markdown-it/markdown-it-footnote/blob/master/index.js#L29\r\nmd.renderer.rules.footnote_ref = (tokens, idx, options, env, slf) => {\r\n  const caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\r\n\r\n  return '<sup class=\"footnote-ref\"><span>' + caption + '</span></sup>';\r\n};\r\n\r\nmd.renderer.rules.footnote_anchor = () => {\r\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\r\n  return ' <span class=\"footnote-backref\">\\u21a9\\uFE0E</span>';\r\n};\r\n\r\nexport default md;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/webflow.css';\nimport '../styles/metaltec-156790.webflow.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: [],\n    sum: '(ãƒ„)'\n  });\n\n  const updateState = async () => {\n    console.log('UpdateState');\n    let cartItems = await localStorage.getItem('products');\n    let dataStorage = await JSON.parse(cartItems);\n\n    if (dataStorage) {\n      if (state.data.length != dataStorage.length) {\n        let sum = 0;\n        await dataStorage.forEach(el => {\n          sum += parseInt(el.price, 10) * el.amount;\n        });\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          data: dataStorage,\n          sum: sum\n        }));\n      }\n    }\n\n    console.log(state);\n  };\n\n  useEffect(() => {\n    updateState();\n  });\n\n  const deleteProduct = async id => {\n    console.log(id);\n    let stateStorage = state.data;\n\n    for (let i = 0; i < stateStorage.length; i++) {\n      if (stateStorage[i].id == id) {\n        stateStorage.splice(i, 1);\n        break;\n      }\n    }\n\n    localStorage.setItem('products', JSON.stringify(stateStorage));\n    updateState();\n  };\n\n  const minus = (index, id) => {\n    let stateStorage = state.data;\n    if (!stateStorage) return false;\n    stateStorage[index].amount -= 1;\n    if (stateStorage[index].amount <= 0) return deleteProduct(id);\n    localStorage.setItem('products', JSON.stringify(stateStorage));\n    updateState();\n  };\n\n  const plus = async (index, id) => {\n    let stateStorage = state.data;\n    if (!stateStorage) return false;\n    stateStorage[index].amount += 1;\n    localStorage.setItem('products', JSON.stringify(stateStorage));\n    updateState();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    plus: plus,\n    minus: minus,\n    deleteProduct: deleteProduct\n  }), __jsx(Component, _extends({\n    plus: plus,\n    minus: minus,\n    deleteProduct: deleteProduct\n  }, pageProps)), __jsx(Footer, null));\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}
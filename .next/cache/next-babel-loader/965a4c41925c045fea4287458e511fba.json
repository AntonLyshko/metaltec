{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport $ from 'jquery';\nimport React, { useState } from 'react';\nimport SliderProduct from '../../components/sliders/slider-product.js';\nimport axios from 'axios';\nimport RichText from '../../components/richText';\nimport NumericInput from 'react-numeric-input';\nimport ReactLoading from 'react-loading';\nexport default (() => {\n  const router = useRouter();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: null,\n    amount: 1\n  });\n\n  const getData = async id => {\n    let res = await axios.get('http://localhost:1337/products?slug=' + id);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      data: res.data[0]\n    }));\n  };\n\n  if (router.query.id && !state.data) {\n    getData(router.query.id);\n  }\n\n  const addToCart = id => {\n    $('.af-class-btn').toggleClass('active');\n    $('.cart-btn-text-1').fadeToggle(0);\n    $('.cart-btn-text-2').fadeToggle(0);\n    let amount = state.amount;\n    let products = [];\n    let unic = true;\n\n    if (localStorage.getItem('products')) {\n      products = JSON.parse(localStorage.getItem('products'));\n      console.log(products);\n    }\n\n    if (products.length) {\n      products.forEach(el => {\n        console.log(products);\n\n        if (el.id == id) {\n          el.amount += amount;\n          unic = false;\n        }\n      });\n    }\n\n    if (unic) products.push({\n      'id': id,\n      'amount': amount,\n      'name': state.data.Name,\n      'image': state.data.Images[0].url,\n      'price': state.data.Price\n    });\n    localStorage.setItem('products', JSON.stringify(products));\n  };\n\n  const amountChange = num => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      amount: num\n    }));\n  };\n\n  if (state.data) {\n    console.log(state.data);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"af-class-section\"\n    }, __jsx(\"div\", {\n      className: \"af-class-wrap\"\n    }, __jsx(\"div\", {\n      className: \"af-class-_6-col\"\n    }, __jsx(\"div\", {\n      \"data-animation\": \"slide\",\n      className: \"af-class-slider-2 af-class-ecommerce w-slider product-slider\"\n    }, __jsx(SliderProduct, {\n      img: state.data.Images\n    }))), __jsx(\"div\", {\n      className: \"af-class-_6-col af-class-_6-col-last\"\n    }, __jsx(\"div\", {\n      className: \"af-class-products1-content-wrap\"\n    }, __jsx(\"div\", {\n      className: \"af-class-products1-desc-wrap\"\n    }, __jsx(\"h3\", null, state.data.Name, __jsx(\"br\", null)), __jsx(\"p\", {\n      className: \"af-class-text-16 af-class-text-16-60\"\n    }, state.data.Features)), __jsx(\"div\", {\n      className: \"af-class-products1-price-wrap\"\n    }, __jsx(\"h2\", {\n      className: \"af-class-products1-price-headline\"\n    }, state.amount * state.data.Price, \" K\\u010D\", __jsx(\"br\", null)), __jsx(NumericInput, {\n      onChange: num => amountChange(num),\n      className: \"numeric-input\",\n      min: 1,\n      max: 10,\n      value: state.amount\n    })), __jsx(\"div\", {\n      onClick: () => addToCart(state.data.slug),\n      className: \"af-class-products1-actions-wrap\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"af-class-btn w-button\"\n    }, __jsx(\"div\", {\n      className: \"cart-btn-text-1\"\n    }, \"P\\u0159idat do ko\\u0161\\xEDku\"), __jsx(\"div\", {\n      className: \"cart-btn-text-2\"\n    }, \"Odebrat z ko\\u0161\\xEDku\"))), __jsx(\"div\", {\n      className: \"af-class-products1-details-wrap\"\n    }, __jsx(\"p\", {\n      className: \"af-class-text-14 af-class-text-14-60\"\n    }, __jsx(RichText, {\n      data: state.data.Description\n    }))))))));\n  } else {\n    return __jsx(\"div\", {\n      className: \"loading-screen\"\n    }, \" \", __jsx(\"div\", {\n      className: \"loading-element\"\n    }, __jsx(ReactLoading, {\n      type: 'bubbles',\n      color: \"#ff373a\"\n    })));\n  }\n});","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\Next\\\\metaltec\\\\components\\\\checkout-form.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { destroyCookie } from \"nookies\";\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nvar CheckoutForm = function CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      checkoutError = _useState[0],\n      setCheckoutError = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutSuccess = _useState2[0],\n      setCheckoutSuccess = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var cardElement, _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              cardElement = elements.getElement(CardElement);\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: cardElement\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (error) {\n                setCheckoutError(err.message);\n              } else {\n                setCheckoutSuccess(true);\n                destroyCookie(null, \"paymentIntentId\");\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        iconColor: '#c4f0ff',\n        color: '#111',\n        fontWeight: 500,\n        fontSize: '16px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n          color: '#fce883'\n        },\n        '::placeholder': {\n          color: '#87bbfd'\n        }\n      },\n      invalid: {\n        iconColor: '#ffc7ee',\n        color: '#ffc7ee'\n      }\n    }\n  };\n  if (checkoutSuccess) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Payment successful!\");\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(CardElement, {\n    options: CARD_OPTIONS,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Pay\"), checkoutError && __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, checkoutError));\n};\n\n_s(CheckoutForm, \"0Jwy+2ieaWtOkzag7YRq0FxYSDs=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/anton/Desktop/Next/metaltec/components/checkout-form.js"],"names":["React","useState","destroyCookie","CardElement","useStripe","useElements","CheckoutForm","checkoutError","setCheckoutError","checkoutSuccess","setCheckoutSuccess","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","createPaymentMethod","type","card","error","paymentMethod","err","message","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontSize","fontSmoothing","invalid"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,kBACmBL,QAAQ,EAD3B;AAAA,MAChBM,aADgB;AAAA,MACDC,gBADC;;AAAA,mBAEuBP,QAAQ,EAF/B;AAAA,MAEhBQ,eAFgB;AAAA,MAECC,kBAFD;;AAGvB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,MAAMQ,YAAY;AAAA,wEAAG,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,KAAK,CAACC,cAAN;;AADiB,oBAGb,CAACJ,MAAD,IAAW,CAACC,QAHC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOXI,cAAAA,WAPW,GAOGJ,QAAQ,CAACK,UAAT,CAAoBd,WAApB,CAPH;AAAA;AAAA,qBAQsBQ,MAAM,CAACO,mBAAP,CAA2B;AAC9DC,gBAAAA,IAAI,EAAE,MADwD;AAE9DC,gBAAAA,IAAI,EAAEJ;AAFwD,eAA3B,CARtB;;AAAA;AAAA;AAQTK,cAAAA,KARS,yBAQTA,KARS;AAQFC,cAAAA,aARE,yBAQFA,aARE;;AAajB,kBAAID,KAAJ,EAAW;AACPb,gBAAAA,gBAAgB,CAACe,GAAG,CAACC,OAAL,CAAhB;AACH,eAFD,MAEO;AACHd,gBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAR,gBAAAA,aAAa,CAAC,IAAD,EAAO,iBAAP,CAAb;AACH;;AAlBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZW,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,MAAMY,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,OADM;AAEjBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,SAAS,EAAE,SADP;AAEJC,QAAAA,KAAK,EAAE,MAFH;AAGJC,QAAAA,UAAU,EAAE,GAHR;AAIJC,QAAAA,QAAQ,EAAE,MAJN;AAKJC,QAAAA,aAAa,EAAE,aALX;AAMJ,6BAAqB;AAACH,UAAAA,KAAK,EAAE;AAAR,SANjB;AAOJ,yBAAiB;AAACA,UAAAA,KAAK,EAAE;AAAR;AAPb,OADD;AAULI,MAAAA,OAAO,EAAE;AACPL,QAAAA,SAAS,EAAE,SADJ;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAVJ;AAFU,GAArB;AAmBA,MAAIrB,eAAJ,EAAqB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAErB,SACI;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEY,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACd,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAKCJ,aAAa,IAAI;AAAM,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCvB,aAAhC,CALlB,CADJ;AASH,CAzDD;;GAAMD,Y;UAGaF,S,EACEC,W;;;KAJfC,Y;AA4DN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { destroyCookie } from \"nookies\";\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\n\r\nconst CheckoutForm = () => {\r\n    const [checkoutError, setCheckoutError] = useState();\r\n    const [checkoutSuccess, setCheckoutSuccess] = useState();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!stripe || !elements) {\r\n\r\n            return;\r\n        }\r\n        const cardElement = elements.getElement(CardElement);\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: cardElement,\r\n        });\r\n\r\n        if (error) {\r\n            setCheckoutError(err.message);\r\n        } else {\r\n            setCheckoutSuccess(true);\r\n            destroyCookie(null, \"paymentIntentId\");\r\n        }\r\n    };\r\n\r\n    const CARD_OPTIONS = {\r\n        iconStyle: 'solid',\r\n        style: {\r\n          base: {\r\n            iconColor: '#c4f0ff',\r\n            color: '#111',\r\n            fontWeight: 500,\r\n            fontSize: '16px',\r\n            fontSmoothing: 'antialiased',\r\n            ':-webkit-autofill': {color: '#fce883'},\r\n            '::placeholder': {color: '#87bbfd'},\r\n          },\r\n          invalid: {\r\n            iconColor: '#ffc7ee',\r\n            color: '#ffc7ee',\r\n          },\r\n        },\r\n      };\r\n\r\n    if (checkoutSuccess) return <p>Payment successful!</p>;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <CardElement options={CARD_OPTIONS} />\r\n            <button type=\"submit\" disabled={!stripe}>\r\n                Pay\r\n        </button>\r\n        {checkoutError && <span style={{ color: \"red\" }}>{checkoutError}</span>}\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}
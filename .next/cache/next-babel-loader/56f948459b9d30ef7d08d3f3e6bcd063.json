{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\Next\\\\metaltec\\\\components\\\\product-list\\\\product-item.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from '@apollo/client';\n\nconst ProductList = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(gql`\n  query Products {\n    products{\n      id\n      Name\n      Price\n        Images{\n          url\n        }\n    }\n  }\n`);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(data);\n\n  if (data && data.length) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"\\u0423\\u0421\\u0421\\u0422\\u042C\");\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"No Products Found\");\n  }\n};\n\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/anton/Desktop/Next/metaltec/components/product-list/product-item.js"],"names":["Link","useQuery","gql","ProductList","loading","error","data","message","console","log","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,GAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAX2C,CAAzC;AAYA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,MAAIA,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF;AAoBD,GArBD,MAqBO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD;AACF,CAzCD;;AA2CA,eAAeP,WAAf","sourcesContent":["import Link from \"next/link\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from '@apollo/client';\r\n\r\nconst ProductList = () => {\r\n\r\n  const { loading, error, data } = useQuery(gql`\r\n  query Products {\r\n    products{\r\n      id\r\n      Name\r\n      Price\r\n        Images{\r\n          url\r\n        }\r\n    }\r\n  }\r\n`);\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n  console.log(data);\r\n  if (data && data.length) {\r\n    return (\r\n      <div>\r\n        УССТЬ\r\n        {/* <div className=\"h-100\">\r\n          {searchQuery.map(res => (\r\n            <div className=\"af-class-product-card\">\r\n              <div className=\"af-class-product-card-image af-class-product-card-2\"><img src={`http://localhost:1337${res.image.url}`} loading=\"lazy\" alt className=\"af-class-image-4\" /></div>\r\n              <div className=\"af-class-product-card-description\">\r\n                <div className=\"af-class-div-block-38\">\r\n                  <h3 className=\"af-class-product-name-title\">{res.name}<br /></h3>\r\n                </div>\r\n                <div className=\"af-class-price-wrapper\">\r\n                  <h2 className=\"af-class-product-price\">{res.price} Kč<br /></h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>No Products Found</h1>;\r\n  }\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { parseCookies, destroyCookie } from \"nookies\";\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\nconst CheckoutForm = (props, ctx) => {\n  const {\n    0: checkoutError,\n    1: setCheckoutError\n  } = useState();\n  const {\n    0: checkoutSuccess,\n    1: setCheckoutSuccess\n  } = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      setCheckoutError(error.message);\n    } else {\n      setCheckoutSuccess(true);\n      destroyCookie(null, \"paymentIntentId\");\n      destroyCookie(null, \"sum\");\n      await createOrder();\n    }\n  };\n\n  const createOrder = async () => {\n    let rawOrder = await localStorage.getItem('order');\n    let order = await JSON.parse(rawOrder);\n    console.log(order);\n    await axios.post('http://localhost:1337/orders', order).then(response => {\n      console.log('Order: ', response.data);\n      sendCheck(response.data.id);\n      localStorage.removeItem(\"products\");\n    }).catch(error => {\n      console.log('An error occurred:', error.response);\n    });\n  };\n\n  const sendCheck = id => {\n    console.log('Sending order info: ' + id);\n    axios.get('http://localhost:5000/api/invoice/' + id);\n  };\n\n  const CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        border: '1px solid #ddd',\n        iconColor: '#ff1721',\n        color: '#111',\n        fontSize: '18px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n          color: '#ff1721'\n        },\n        '::placeholder': {\n          color: '#111'\n        }\n      },\n      invalid: {\n        iconColor: '#ffc7ee',\n        color: '#ffc7ee'\n      }\n    }\n  };\n  if (checkoutSuccess) return __jsx(\"div\", {\n    className: \"payment-success\"\n  }, __jsx(\"img\", {\n    width: \"72\",\n    height: \"72\",\n    src: require(\"../images/check.svg\")\n  }), __jsx(\"h3\", null, \"Platba byla \\xFAsp\\u011B\\u0161n\\xE1\"), __jsx(\"p\", null, \"Kontrola a podrobnosti o n\\xE1kupu byly zasl\\xE1ny na po\\u0161tu, kterou jste zadali\"));\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"h4\", {\n    className: \"final-sum\"\n  }, \"Platit \", props.sum, \" K\\u010D\"), __jsx(\"div\", {\n    className: \"card-element-container\"\n  }, __jsx(CardElement, {\n    options: CARD_OPTIONS\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"final-btn-container af-class-button-2 af-class-order-btn-1 w-button continue-btn final-btn\",\n    disabled: !stripe\n  }, \"Pay\"), __jsx(\"div\", {\n    className: \"error-container\",\n    style: {\n      color: \"red\"\n    }\n  }, checkoutError));\n};\n\nexport default CheckoutForm;","map":null,"metadata":{},"sourceType":"module"}